{
  "name": "cy_practise",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test-cfg": "cypress open --config pageLoadTimeout=30000,baseUrl=https://www.reddit.com/",
    "cy:open": "cypress open",
    "test-custCfg": "cypress open --config-file ./custCypress.json",
    "test-show": "cypress run --browser chrome --spec 'cypress/integration/CommandLineSuite/*.js'",
    "test-script-chrome": "cypress run --env email=qaboxletstest@gmail.com,password=password123 --no-exit --browser chrome --spec 'cypress/integration/CommandLineSuite/*ENV*.js'",
    "test-script-firefox": "cypress run --env email=qaboxletstest@gmail.com,password=password123 --browser firefox --spec 'cypress/integration/CommandLineSuite/*ENV*.js'",
    "test-c-f": "npm run test-script-chrome && npm run test-script-firefox",
    "test-script-chrome-headless": "cypress run --headless --env email=qaboxletstest@gmail.com,password=password123 --browser chrome --spec 'cypress/integration/CommandLineSuite/*ENV*.js'",
    "clean:reports": "if exist cypress\\reports rmdir /s/q cypress\\reports && mkdir cypress\\reports && mkdir cypress\\reports\\mochareports",
    "pretest": "npm run clean:reports",
    "scripts": "cypress run",
    "combine-reports": "mochawesome-merge cypress/reports/mocha/*.json > cypress/reports/mochareports/report.json",
    "generate-report": "marge cypress/reports/mochareports/report.json -f report -o cypress/reports/mochareports",
    "posttest": "npm run combine-reports && npm run generate-report",
    "test": "npm run scripts || npm run posttest",
    "cy:api": "cypress open --config-file ./custAPIConfig.json",
    "cy:snapshot": "cypress open --config-file ./custVisualSnapshotConfig.json",
    "cy:percy": "npx percy exec -- cypress run --config-file ./custVisualPercyConfig.json",
    "cy:intercept": "cypress open --config-file ./custInterceptConfig.json",
    "cy:qabox": "cypress open --config-file ./custQABOXConfig.json",
    "cy:run": "cypress run --env allure=true",
    "allure:report": "allure generate allure-results --clean -o allure-report",
    "allure:clear": "if exist allure-results rmdir /q /s allure-results && if exist allure-report rmdir /q /s allure-report && if exist cypress/screenshots rmdir /q /s cypress/screenshots && if exist cypress/videos rmdir /q /s cypress",
    "pretest:allure": "npm run allure:clear",
    "test:allure": "npm run cy:run || npm run posttest",
    "posttest:allure": "npm run allure:report"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@cypress/xpath": "^2.0.3",
    "@faker-js/faker": "^7.6.0",
    "cy-iframe": "^1.1.2",
    "cypress": "^12.6.0",
    "cypress-failed-log": "^2.10.0",
    "cypress-file-upload": "^5.0.8",
    "mochawesome": "^7.1.3",
    "mochawesome-merge": "^4.2.2",
    "mochawesome-report-generator": "^6.2.0",
    "node-xlsx": "^0.21.0",
    "playwright-webkit": "^1.31.1"
  },
  "dependencies": {
    "cypress-downloadfile": "^1.2.3",
    "mysql": "github:mysqljs/mysql",
    "neat-csv": "^5.0.0",
    "radium": "^0.26.2",
    "xlsx": "^0.18.5"
  }
}
